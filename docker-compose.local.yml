services:
  db:
    container_name: db
    hostname: db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${SA_PASSWORD}" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    restart: always
    networks:
      - netcore-network

  redis:
    container_name: redis
    hostname: redis
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    networks:
      - netcore-network

  netcore-migration:
    container_name: netcore-migration
    hostname: netcore-migration
    build:
      context: .
      dockerfile: src/client/NetCore.Migration/Dockerfile
    command: ["dotnet", "run", "-d", "-m", "-s", "-t"]    
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    networks:
      - netcore-network

  netcore-api:
    container_name: netcore-api
    hostname: netcore-api
    build:
      context: .
      dockerfile: src/client/NetCore.Api/Dockerfile
    depends_on:
      netcore-migration:
        condition: service_completed_successfully
    ports:
      - 6000:80
      - 6001:443
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_Kestrel__Certificates__Default__Password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=${ASPNETCORE_Kestrel__Certificates__Default__Path}
    volumes:
      - ./certificates/.netcore-api/https:/https:ro
    networks:
      - netcore-network
    # healthcheck:
    #   test: ["CMD","curl", "--fail", "https://localhost:6001/healthz || exit"]
    restart: always

  # netcore-ui:
  #   container_name: netcore-ui
  #   hostname: netcore-ui
  #   build:
  #     context: .
  #     dockerfile: src/client/NetCore.UI/Dockerfile
  #   depends_on:
  #     - netcore-api
  #   ports:
  #     - 6010:80
  #     - 6011:443
    # environment:
    #   - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    #   - ASPNETCORE_URLS=${ASPNETCORE_URLS}
    #   - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_Kestrel__Certificates__Default__Password}
    #   - ASPNETCORE_Kestrel__Certificates__Default__Path=${ASPNETCORE_Kestrel__Certificates__Default__Path}
    # volumes:
    #   - ./certificates/.netcore-api/https:/https:ro
    # networks:
    #   - netcore-network
    # restart: always 


networks:
  netcore-network:
    external: true
